# Generated by Django 5.2.6 on 2025-09-09 03:16

import access.models
import django.db.models.deletion
import django.utils.timezone
import general.storage_backends
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailConfirmationControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='Data e hora em que a solicitação foi realizada.', verbose_name='Date of Request')),
            ],
            options={
                'verbose_name': 'Email Confirmation Control',
                'verbose_name_plural': 'Email Confirmation Controls',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PasswordRecoveryEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('body', models.TextField(verbose_name='Body')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('email_adress', models.EmailField(max_length=200, verbose_name='Adress')),
            ],
        ),
        migrations.CreateModel(
            name='PreRegister',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=64, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data Criação')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Data Atualização')),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResetPasswordControl',
            fields=[
                ('request_id', models.CharField(default=uuid.uuid4, editable=False, max_length=64, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUserModel',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userId', models.CharField(default=uuid.uuid4, editable=False, max_length=64, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, storage=general.storage_backends.PrivateMediaStorage(), upload_to='')),
                ('stripeCustomerId', models.CharField(blank=True, max_length=100, null=True)),
                ('dalle_credits', models.IntegerField(default=0)),
                ('subscription_credits', models.IntegerField(default=0)),
                ('domainShopperId', models.CharField(blank=True, max_length=100, null=True)),
                ('is_deactivated', models.BooleanField(default=False)),
                ('is_complimentary_plan', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data Criação')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Data Atualização')),
                ('phone_number', models.CharField(blank=True, help_text='Número de telefone no formato E.164', max_length=15, null=True, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('is_email_confirmed', models.BooleanField(default=False, help_text='Indica se o e-mail do usuário foi confirmado.', verbose_name='Email Confirmed')),
                ('notification_settings', models.JSONField(blank=True, default=access.models.default_notification_settings, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Custom User',
            },
        ),
        migrations.CreateModel(
            name='LoggedDevice',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=64, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data Criação')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Data Atualização')),
                ('device_type', models.CharField(blank=True, choices=[('desktop', 'Desktop'), ('mobile', 'Mobile')], help_text="Tipo de dispositivo: 'desktop' ou 'mobile'.", max_length=10, null=True)),
                ('device_name', models.CharField(blank=True, help_text='Nome ou identificação do dispositivo (ex: browser).', max_length=255, null=True)),
                ('last_login_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='Data e hora do último login neste dispositivo.', null=True)),
                ('place', models.CharField(blank=True, default='unknown', max_length=100, null=True)),
                ('user', models.ForeignKey(blank=True, help_text='Usuário associado a este dispositivo.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logged_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dispositivo',
                'verbose_name_plural': 'Dispositivos',
                'ordering': ['-last_login_at'],
                'unique_together': {('user', 'device_type', 'device_name')},
            },
        ),
    ]
